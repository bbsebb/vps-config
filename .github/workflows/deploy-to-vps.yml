name: Deploy to VPS

on:
  push:
    branches:
      - vps  # or master, depending on your default branch name

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}
          
      - name: Add VPS to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ vars.VPS_HOST }} >> ~/.ssh/known_hosts
          
      - name: Deploy configuration to VPS
        run: |
          echo "Deploying configuration to VPS..."
          
          # Create a temporary directory on the VPS
          ssh ${{ vars.VPS_USERNAME }}@${{ vars.VPS_HOST }} "mkdir -p ~/temp_nginx_config"
          
          # Copy Nginx configurations to the temporary directory
          scp nginx/nginx.conf ${{ vars.VPS_USERNAME }}@${{ vars.VPS_HOST }}:~/temp_nginx_config/
          scp -r nginx/sites-available/* ${{ vars.VPS_USERNAME }}@${{ vars.VPS_HOST }}:~/temp_nginx_config/
          
          # Use sudo to create directories and move files to their final locations
          ssh ${{ vars.VPS_USERNAME }}@${{ vars.VPS_HOST }} "sudo mkdir -p /etc/nginx/sites-available /etc/nginx/sites-enabled"
          ssh ${{ vars.VPS_USERNAME }}@${{ vars.VPS_HOST }} "sudo cp ~/temp_nginx_config/nginx.conf /etc/nginx/"
          ssh ${{ vars.VPS_USERNAME }}@${{ vars.VPS_HOST }} "sudo cp ~/temp_nginx_config/* /etc/nginx/sites-available/"
          
          # Create symbolic links for enabled sites (if they don't exist)
          ssh ${{ vars.VPS_USERNAME }}@${{ vars.VPS_HOST }} "for site in /etc/nginx/sites-available/*; do \
            site_name=\$(basename \$site); \
            if [ ! -L /etc/nginx/sites-enabled/\$site_name ]; then \
              sudo ln -sf /etc/nginx/sites-available/\$site_name /etc/nginx/sites-enabled/\$site_name; \
            fi \
          done"
          
          # Clean up temporary directory
          ssh ${{ vars.VPS_USERNAME }}@${{ vars.VPS_HOST }} "rm -rf ~/temp_nginx_config"
          
      - name: Test Nginx configuration and reload
        run: |
          echo "Testing Nginx configuration..."
          ssh ${{ vars.VPS_USERNAME }}@${{ vars.VPS_HOST }} "sudo nginx -t && sudo systemctl reload nginx"
          echo "Configuration deployed and Nginx reloaded successfully!"